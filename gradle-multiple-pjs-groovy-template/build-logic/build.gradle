/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Support convention plugins written in Groovy. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
    id 'groovy-gradle-plugin'
}
group = "test.gradle.dep.plugins"
version = '1.0'

repositories {
    // Use the plugin portal to apply community plugins in convention plugins.
    gradlePluginPortal()
}


apply plugin: 'maven-publish'
  def getEnvOrDefault = { key, defaultValue -> 
     def v = System.getenv(key)
     (v !=null && v.length() >0) ? v : defaultValue
  }

  def NEXUS_UPLOAD_REPOS_URL= getEnvOrDefault("NEXUS_UPLOAD_REPOS_URL", ""),
      NEXUS_UPLOAD_REPOS_USER= getEnvOrDefault("NEXUS_UPLOAD_REPOS_USER", ""),
      NEXUS_UPLOAD_REPOS_PWD= getEnvOrDefault("NEXUS_UPLOAD_REPOS_PWD", "");

  publishing {
    repositories {
      maven {
        name = "Packages"
        url = NEXUS_UPLOAD_REPOS_URL
        //allowInsecureProtocol = true
        credentials {
          username = NEXUS_UPLOAD_REPOS_USER
          password = NEXUS_UPLOAD_REPOS_PWD
        }
      }
    }
    publications {
      mavenJava(MavenPublication) {
        from components.java

        versionMapping {
          usage('java-api') {
            fromResolutionOf('runtimeClasspath')
          }
          usage('java-runtime') {
            fromResolutionResult()
          }
        }
      }
    }
  }