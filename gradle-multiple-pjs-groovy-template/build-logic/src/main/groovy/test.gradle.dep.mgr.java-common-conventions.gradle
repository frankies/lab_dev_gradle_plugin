/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java Plugin to add support for Java.
    id 'java' 
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    constraints {
        // Define dependency versions as constraints
        implementation 'org.apache.commons:commons-text:1.10.0'
    }
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.0')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}


 
  def getEnvOrDefault = { key, defaultValue -> 
     def v = System.getenv(key)
     (v !=null && v.length() >0) ? v : defaultValue
  }

  def NEXUS_UPLOAD_REPOS_URL= getEnvOrDefault("NEXUS_UPLOAD_REPOS_URL", ""),
      NEXUS_UPLOAD_REPOS_USER= getEnvOrDefault("NEXUS_UPLOAD_REPOS_USER", ""),
      NEXUS_UPLOAD_REPOS_PWD= getEnvOrDefault("NEXUS_UPLOAD_REPOS_PWD", "");

  publishing {
    repositories {
      maven {
        name = "Packages"
        url = NEXUS_UPLOAD_REPOS_URL
        //allowInsecureProtocol = true
        credentials {
          username = NEXUS_UPLOAD_REPOS_USER
          password = NEXUS_UPLOAD_REPOS_PWD
        }
      }
    }
    publications {
      mavenJava(MavenPublication) {
        from components.java

        versionMapping {
          usage('java-api') {
            fromResolutionOf('runtimeClasspath')
          }
          usage('java-runtime') {
            fromResolutionResult()
          }
        }
      }
    }
  }